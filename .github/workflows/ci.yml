---
name: 'CI'
on:
  - 'push'
jobs:
  phpSyntaxCheck:
    name: 'PHP Syntax Check'
    strategy:
      matrix:
        php_version:
          - '8.0'
          - '8.1'
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: 'actions/checkout@v2'
      - run: |
          sudo update-alternatives --set php /usr/bin/php${{ matrix.php_version }}
          php -v
          find . \( -type d \( -name '.git' -or -name 'vendor' -or -name 'runtime' \) -prune \) -or \( -type f -name '*.php' -print \) | LANG=C sort | xargs -n 1 php -l

  makeComposerCache:
    name: 'Make composer cache'
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: 'actions/checkout@v2'

      - uses: 'actions/cache@v2'
        with:
          path: |
            ~/.cache/composer/files
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: 'Use PHP 8.0'
        run: 'sudo update-alternatives --set php /usr/bin/php8.0'

      - name: 'Install Composer dependencies'
        run: 'composer install --prefer-dist'

  phpStyleCheck:
    name: 'PHP Coding Style'
    runs-on: 'ubuntu-20.04'
    needs:
      - 'makeComposerCache'
    steps:
      - uses: 'actions/checkout@v2'

      - uses: 'actions/cache@v2'
        with:
          path: |
            ~/.cache/composer/files
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

      - name: 'Use PHP 8.0'
        run: 'sudo update-alternatives --set php /usr/bin/php8.0'

      - name: 'Install Composer dependencies'
        run: 'composer install --prefer-dist'

      - name: 'Create config-files'
        run: 'make -j config-files'

      - name: 'Run PHPCS'
        run: './vendor/bin/phpcs'

      - name: 'Run PHPStan (Errors ignored)'
        run: './vendor/bin/phpstan analyze --memory-limit=1G || true'

  jsStyleCheck:
    name: 'JS Coding Style'
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: 'actions/checkout@v2'

      - name: 'Install NPM packages'
        run: |
          npm ci

      - name: 'Run semistandard'
        run: |
          npx semistandard --global=jQuery --global=bootstrap 'resources/**/*.es'

  cssStyleCheck:
    name: 'CSS Coding Style'
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: 'actions/checkout@v2'
      - run: |
          node --version
          npm ci
          npx stylelint "resources/**/*.scss"

  phpTest:
    name: 'PHP test (PHP ${{ matrix.php_version }})'
    strategy:
      matrix:
        php_version:
          - '8.0'
          - '8.1'
    runs-on: 'ubuntu-20.04'
    needs:
      - 'makeComposerCache'
    steps:
      - uses: 'actions/checkout@v2'

      - uses: 'actions/cache@v2'
        with:
          path: |
            ~/.cache/composer/files
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

      - name: 'Set up PHP version ${{ matrix.php_version }}'
        run: sudo update-alternatives --set php /usr/bin/php${{ matrix.php_version }}

      - name: 'Set up application'
        run: |
          ln -s `which composer` composer.phar
          make config-files vendor

      - name: 'Set up (migrate) database'
        run: 'tests/bin/yii migrate/fresh --compact=1 --interactive=0'

      - name: 'Run unit test'
        run: 'vendor/bin/codecept run unit'
